language: java
install: skip

dist: trusty
dist: xenial # sonarcloud

jdk:
  - oraclejdk11
 
after_success:
  - bash <(curl -s https://codecov.io/bash)
  
sudo: false

addons:
  sonarcloud:
    organization: "yulingggg" # the key of the org you chose at step #3
    token:
      secure: d73aebb1a8c090c56f4b0743777c3a343046b8b2 # encrypted value of your token
  apt:
    packages:
      - oracle-java8-installer


script:
  - ./gradlew build
  - ./gradlew test
  - sonar-scanner

################ CODE CLIMATE #########################3
# Cache gems
cache:
  bundler: true
  directories:
    - node_modules

addons:
  chrome: stable
  #firefox: latest
  sonarcloud:
    organization: "yulingggg"
    token:
      secure: "**************************" # encrypted value of your token

script:
  - ./gradlew sonarqube

env:
  global:
    CC_TEST_REPORTER_ID=ABC123

before_install:                        # Install node version from .nvmrc
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  #- export DISPLAY=:99.0                # Display number for xvfb (for headless browser testing)
  #- sh -e /etc/init.d/xvfb start        # Start xvfb (for headless browser testing)
        

# Pipe the coverage data to Code Climate
after_script:
  - ./cc-test-reporter format-coverage -t simplecov -o coverage/codeclimate.backend.json coverage/backend/.resultset.json # Format backend coverage
  - ./cc-test-reporter format-coverage -t lcov -o coverage/codeclimate.frontend.json coverage/frontend/lcov.info  # Format frontend coverage
  - ./cc-test-reporter sum-coverage coverage/codeclimate.*.json -p 2                  # Sum both coverage parts into coverage/codeclimate.json
  - if [[ "$TRAVIS_TEST_RESULT" == 0 ]]; then ./cc-test-reporter upload-coverage; fi  # Upload coverage/codeclimate.json


##################################3######################################